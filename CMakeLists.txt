cmake_minimum_required(VERSION 3.0)
project(ficl VERSION 4.2.0 LANGUAGES C)

# Compilation switches
option(ADD_DEBUGINFO "Add debugging information to FICL binaries" OFF)
option(SPLIT_DEBUGINFO "Split debugging information into separate files" OFF)

# Preprocessor switches.
option(FICL_WANT_SOFTWORDS "Enable softcore packages" ON)
option(FICL_WANT_LZ_SOFTCORE "Compress FICL softcore using LZ77" OFF)
option(FICL_WANT_OOP "Include OOP softwords extension" ON)
option(FICL_WANT_LOCALS "Include Johns-Hopkins locals" ON)
option(FICL_WANT_MINIMAL "Build minimal interpreter" OFF)
set(FICL_PROMPT "ficl> " CACHE STRING "Custom FICL REPL prompt")

# Configurator switches.
option(FICL_QUIET "Make interpreter quiet so it may be used for CGI" ON)

if(FICL_WANT_SOFTWORDS)
	set(FICL_WANT_SOFTWORDS 1)
else()
	set(FICL_WANT_SOFTWORDS 0)
endif()
if(FICL_WANT_LZ_SOFTCORE)
	set(FICL_WANT_LZ_SOFTCORE 1)
else()
	set(FICL_WANT_LZ_SOFTCORE 0)
endif()
if(FICL_WANT_OOP)
	set(FICL_WANT_OOP 1)
else()
	set(FICL_WANT_OOP 0)
endif()
if(FICL_WANT_LOCALS)
	set(FICL_WANT_LOCALS 1)
else()
	set(FICL_WANT_LOCALS 0)
endif()
if(FICL_WANT_MINIMAL)
	set(FICL_WANT_MINIMAL 1)
else()
	set(FICL_WANT_MINIMAL 0)
endif()
if(NOT FICL_PROMPT)
	set(FICL_PROMPT "ok> ")
endif()
# Use this file to override defaults stored in ficl.h.
configure_file(ficllocal.h.in ficllocal.h)

add_subdirectory(softcore)

add_executable(ficl ${CMAKE_CURRENT_SOURCE_DIR}/src/main.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/ficl.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/system.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/dictionary.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/primitives.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/extras.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/bit.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/callback.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/compatibility.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/double.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/fileaccess.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/float.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/hash.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/lzcompress.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/lzuncompress.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/prefix.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/search.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/softcore.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/stack.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/tools.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/utility.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/vm.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/word.c
	${CMAKE_CURRENT_SOURCE_DIR}/ficlplatform/unix.h
	${CMAKE_CURRENT_SOURCE_DIR}/ficlplatform/unix.c
	${CMAKE_CURRENT_SOURCE_DIR}/src/ficlcompatibility.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/ficltokens.h
	# Use this file to override defaults stored in ficl.h.
	${CMAKE_CURRENT_BINARY_DIR}/ficllocal.h)
# FICL depends on fresh softcore.c generated by makesoftcore.
add_dependencies(ficl makesoftcore)
target_compile_definitions(ficl PUBLIC -DFICL_WANT_LOCALS=1 -DFICL_WANT_USER=1)
if(FICL_WANT_LZ_SOFTCORE)
	target_compile_definitions(ficl PUBLIC -DFICL_WANT_LZ_SOFTCORE=1)
	message(STATUS "Compressed softcore will be generated.")
else()
	target_compile_definitions(ficl PUBLIC -DFICL_WANT_LZ_SOFTCORE=0)
	message(STATUS "Uncompressed softcore will be generated.")
endif()
target_include_directories(ficl PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}/src")
target_link_libraries(ficl m)
set_property(TARGET ficl PROPERTY POSITION_INDEPENDENT_CODE ON)

enable_testing()

